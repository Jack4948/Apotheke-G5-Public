@startuml

package pharmacy.personal {

  class PersonalService {
      - UserRepository userRepository
      - UserAccountManagement userAccounts
      + activateInitialUsers()
      + enableUser(id: UUID)
      + disableDoctorsOffice(id: UUID)
      + deleteById(id: UUID)
      + isAnotherDoctorOfficeActive(): boolean
  }

  class PersonalController {
    - UserService userService
    - PersonalService personalService
    + personal(model: Model): String
    + addEmployee(model: Model): String
    + deleteUser(id: UUID, redirectAttributes: RedirectAttributes): String
    + enableUser(id: UUID, redirectAttributes: RedirectAttributes): String
    + deactivateUser(id: UUID, redirectAttributes: RedirectAttributes): String
  }
}

package pharmacy.user {

  class RegistrationForm {
    - String firstName
    - String lastName
    - String password
    - String role
    - boolean isFromPersonal
  }

  class User {
    - UserAccount userAccount
    - String fullName
    - String firstName
    - String password
    - String role
    - boolean enabled
  }

  class UserService {
    + findAll(): List<User>
  }
}

PersonalService --> User : uses
PersonalService --> UserService : uses
PersonalService --> RegistrationForm : uses
PersonalService --> UserAccount : uses

PersonalController --> PersonalService
PersonalController --> UserService

RegistrationForm --> User
UserService --> User

@enduml
